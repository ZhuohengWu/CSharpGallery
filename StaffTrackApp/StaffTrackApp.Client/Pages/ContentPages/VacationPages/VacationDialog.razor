<SfDialog Width="280px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogEvents OnOpen="OpenDialog"></DialogEvents>
    <DialogTemplates>
        <Header> @title Employee Vacation </Header>
        <Content>
            <EditForm Model="ItemModel" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body">
                        <div class="mt-3">
                            <label class="form-label">Employee Id</label>
                            <input @bind="ItemModel.EmployeeId" class="form-control" disabled />
                        </div>
                        <div class="mt-2">
                            <label class="form-label">Start Date</label>
                            <InputDate @bind-Value="ItemModel.StartDate" class="form-control" />
                        </div>
                        <div class="mt-2">
                            <label class="form-label">Num Of Days</label>
                            <InputNumber @bind-Value="ItemModel.NumOfDays" class="form-control" />
                        </div>
                        <div class="mt-2">
                            <label class="form-label">End Date</label>
                            <InputText value="ItemModel.EndDate" class="form-control" disabled />
                        </div>
                        <div class="mt-3 mb-3">
                            <label class="form-label">Select Type</label>

                            @if (ItemModel.VacationType != null)
                            {
                                string selected = ItemModel.VacationType!.Name!;
                                <SfDropDownList TValue="string" TItem="VacationType" Placeholder="@selected" DataSource="VacationTypes">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="VacationType" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                            else
                            {
                                <SfDropDownList TValue="string" TItem="VacationType" Placeholder="Select Type" DataSource="VacationTypes">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="VacationType" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                        </div>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>

    <DialogButtons>
        <DialogButton Content="Save" Type="ButtonType.Submit" IsPrimary="true" OnClick="Save" />
    </DialogButtons>

</SfDialog>

@code {
    [Parameter] public Vacation ItemModel { get; set; } = new();
    [Parameter] public List<VacationType> VacationTypes { get; set; } = new();
    [Parameter] public EventCallback<Vacation> HandleSaveOperationEvent { get; set; }

    private bool IsVisible { get; set; } = false;
    private string title { get; set; } = "Add";

    public void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void CloseDialog()
    {
        IsVisible = false;
        StateHasChanged();
    }

    private async void Save()
    {
        if (ItemModel.VacationTypeId <= 0)
        {
            await dialogService.AlertAsync("Please provide type", "Alert");
        }
        else
        {
            await HandleSaveOperationEvent.InvokeAsync(ItemModel);
        }
    }

    public void ChangeTitle(string title)
    {
        this.title = title;
    }

    public void OnValueChange(ChangeEventArgs<string, VacationType> args)
    {
        ItemModel.VacationTypeId = int.Parse(args.Value.ToString());
    }
}
